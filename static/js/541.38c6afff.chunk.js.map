{"version":3,"file":"static/js/541.38c6afff.chunk.js","mappings":"+IAEA,MAAMA,EAAcC,IAAqC,IAApC,MAACC,EAAK,KAAEC,EAAI,MAAEC,KAAUC,GAAMJ,EAC/C,MAAMK,EAAWH,EAAKI,SAAWJ,EAAKK,MAEtC,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAOC,YAAc,KAAON,EAAWK,EAAAA,EAAOH,MAAQ,IAAIK,SAAA,EACtEC,EAAAA,EAAAA,KAAA,OAAAD,SACKR,EAAMQ,WAEVP,IAAYQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOV,EAAKK,UACvB,EAIDO,EAAYV,IACrB,MAAM,MAACH,EAAK,KAAEC,EAAI,MAAEC,KAAUY,GAAaX,EAC3C,OAAOI,EAAAA,EAAAA,MAACT,EAAW,IAAKK,EAAKQ,SAAA,CAAE,KAACC,EAAAA,EAAAA,KAAA,eAAcZ,KAAWc,IAAY,MAAe,EAG3EC,EAASZ,IAClB,MAAM,MAACH,EAAK,KAAEC,EAAI,MAAEC,KAAUY,GAAaX,EAC3C,OAAOI,EAAAA,EAAAA,MAACT,EAAW,IAAKK,EAAKQ,SAAA,CAAE,KAACC,EAAAA,EAAAA,KAAA,YAAWZ,KAAWc,IAAY,MAAe,C,uGCrBrF,QAAuB,oBAAvB,EAAqD,uB,6FCQ9C,MAAME,EAAab,IACtB,MAAMc,GAAYC,EAAAA,EAAAA,GAAiB,IAEnC,OACIN,EAAAA,EAAAA,KAAA,OAAKJ,UAAWW,EAAOR,UACnBJ,EAAAA,EAAAA,MAAA,QAAMa,SAAUjB,EAAMkB,aAAaV,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACC,UAAWR,EAAAA,EAAOS,YAAa,QAASC,KAAM,QAASC,SAAU,CAACC,EAAAA,EAAeV,QAC7FL,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACC,UAAWR,EAAAA,EAAOS,YAAa,WAAYC,KAAM,WAAYG,KAAM,WAAYF,SAAU,CAACC,EAAAA,EAAeV,QACrHV,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EAAKC,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACC,UAAWR,EAAAA,EAAOa,KAAM,WAAYH,KAAM,oBAAoB,iBACzEtB,EAAMG,QAASM,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAOoB,iBAAiBlB,SAAER,EAAMG,SAChEM,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAGd,EAIDmB,GAAiBC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,SADoBD,CAE3Bf,GAGUiB,EAAS9B,GAKfA,EAAM+B,QACEtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CAACC,GAAI,eAIrB7B,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWW,EAAUR,SAAC,wBAC3BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACkB,EAAc,CAACV,SAZViB,IACdlC,EAAMmC,UAAUD,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAW,SAuBlEC,GAAiBC,EAAAA,EAAAA,KANLC,IACd,CACHV,OAAQU,EAAMC,SAASX,UAKV,CAACI,UAAS,MADDK,CACIV,E,0CCzD3B,MAAMN,EAAiBmB,GACtBA,OAAO,EACC,oBAGH5B,EAAoBD,GAAe6B,IAC5C,GAAIA,EAAMC,OAAS9B,EAAW,MAAO,iBAAiBA,WACtC,C,kCCPpB,SAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,uC","sources":["components/Common/Textarea/Textarea.js","webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","utils/validators/validator.js","webpack://my-app/./src/components/Common/Textarea/FormSettings.module.css?57dd"],"sourcesContent":["import styles from \"./FormSettings.module.css\"\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"Login_Form__E3vnN\",\"Welcome\":\"Login_Welcome__vcCX3\"};","import l from \"./Login.module.css\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validator\";\r\nimport {Input} from \"../Common/Textarea/Textarea\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginAuth} from \"../../redux/auth_reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport styles from \"../Common/Textarea/FormSettings.module.css\"\r\n\r\nexport const LoginForm = (props) => {\r\n    const maxLength = maxLengthCreator(25);\r\n\r\n    return (\r\n        <div className={l.Form}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div><Field component={Input} placeholder={\"Email\"} name={\"email\"} validate={[requiredField, maxLength]}/></div>\r\n                <div><Field component={Input} placeholder={\"Password\"} name={\"password\"} type={\"password\"} validate={[requiredField, maxLength]}/></div>\r\n                <div><Field component={Input} type={\"checkbox\"} name={\"rememberMeLogin\"}/>Remember me</div>\r\n                {props.error && <div className={styles.formSummaryError}>{props.error}</div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\n\r\nexport const Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.loginAuth(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Navigate to={\"/MainBody\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={l.Welcome}>Enter your account</div>\r\n            <div>\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authUser.isAuth\r\n    }\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n    mapStateToProps, {loginAuth})(Login)\r\n","\r\nexport const requiredField = (value) => {\r\n    if (value) return undefined\r\n    else return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormSettings_formControl__3TVsw\",\"error\":\"FormSettings_error__axShK\",\"formSummaryError\":\"FormSettings_formSummaryError__yWa2S\"};"],"names":["FormControl","_ref","input","meta","child","props","hasError","touched","error","_jsxs","className","styles","formControl","children","_jsx","Textarea","restProps","Input","LoginForm","maxLength","maxLengthCreator","l","onSubmit","handleSubmit","Field","component","placeholder","name","validate","requiredField","type","formSummaryError","LoginReduxForm","reduxForm","form","Login","isAuth","Navigate","to","formData","loginAuth","email","password","rememberMe","LoginContainer","connect","state","authUser","value","length"],"sourceRoot":""}