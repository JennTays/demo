{"version":3,"file":"static/js/763.a5468993.chunk.js","mappings":"gKACA,QAA+B,4BAA/B,EAA+E,iCAA/E,EAAsI,mCAAtI,EAAyL,6B,qDCIlL,MAAMA,EAAYC,IAAgF,IAA/E,gBAACC,EAAe,SAAEC,EAAQ,YAAEC,EAAW,cAAEC,EAAa,YAAEC,EAAc,IAAGL,GAC1FM,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,GAC7CC,EAAQ,GAERC,EAAaC,KAAKC,KAAKX,EAAkBC,GACzCW,EAAeF,KAAKC,KAAKF,EAAaL,GACtCS,GAAqBR,EAAgB,GAAKD,EAAc,EACxDU,EAAqBT,EAAgBD,EAEzC,IAAK,IAAIW,EAAI,EAAGA,GAAKN,EAAYM,IAC7BP,EAAMQ,KAAKD,GAGf,OAAOE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACFb,EAAgB,IAAKc,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,QAASA,KACnCf,EAAiBD,EAAgB,EAAE,EACrCa,SAAC,SACFV,EAAMc,QAAOC,GAAKA,GAAKV,GAAqBU,GAAKT,IAC7CU,KAAID,IACEN,EAAAA,EAAAA,MAAA,QAAMQ,UAAWvB,IAAgBqB,GAAKG,EAChCL,QAASA,KACLlB,EAAcoB,EAAE,EAClBL,SAAA,CAAEK,EAAE,YAEtBX,EAAeP,IAAiBc,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,QAASA,KAC9Cf,EAAiBD,EAAgB,EAAE,EACrCa,SAAC,WACD,ECzBH,IAAIS,EAASC,IAEZX,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACrB,EAAS,CAACE,gBAAiB4B,EAAMC,eAAgB5B,SAAU2B,EAAM3B,SAAUC,YAAa0B,EAAM1B,YACpFC,cAAeyB,EAAMzB,iBAChCc,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAK,gBACVA,EAAAA,EAAAA,KAAA,OAAAD,SAEQU,EAAME,WAAWN,KAAIO,IACjBd,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,UACAF,EAAAA,EAAAA,MAAA,OAAKe,MAAO,CAACC,WAAY,UAAWC,SAAU,QAAQhB,SAAA,CACjDa,EAAEI,GAAG,MAAIJ,EAAEK,KAAK,MAAgB,MAAZL,EAAEM,OAAiB,SAAW,WACnDlB,EAAAA,EAAAA,KAAA,SACmB,MAAlBY,EAAEO,OAAOC,OACJpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACC,GAAI,aAAeV,EAAEI,GAAGjB,UAC/BC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAiBgB,IAAKX,EAAEO,OAAOC,WAGjDpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACC,GAAI,aAAeV,EAAEI,GAAGjB,UAC/BC,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CAACC,KAAM,IAAKC,MAAM1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,YAIlD3B,EAAAA,EAAAA,KAAA,OAAAD,SACKa,EAAEgB,UACG5B,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACK,UAAWC,EAAuBsB,KAAM,UACxCC,SAAUrB,EAAMsB,iBAAiBC,MAAKhB,GAAMA,IAAOJ,EAAEI,KAAKd,QAASA,KACzEO,EAAMwB,SAASrB,EAAEI,GAAG,EACtBjB,SAAC,cAEDC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACK,UAAWC,EAAqBsB,KAAM,UACtCC,SAAUrB,EAAMsB,iBAAiBC,MAAKhB,GAAMA,IAAOJ,EAAEI,KAAKd,QAASA,KACzEO,EAAMyB,OAAOtB,EAAEI,GAAG,EACpBjB,SAAC,uB,4CCvChC,MAAMoC,EAAoBC,GACtBA,EAAMC,UAAUC,MAOdC,IAJgBC,EAAAA,EAAAA,IAAe,CAACL,IAAoBG,GACtDA,EAAMnC,QAAOS,IAAK,MAGOwB,GACzBA,EAAMC,UAAUvD,UAGd2D,EAAyBL,GAC3BA,EAAMC,UAAU3B,eAGdgC,EAA0BN,GAC5BA,EAAMC,UAAUtD,YAGd4D,EAAyBP,GAC3BA,EAAMC,UAAUO,WAGdC,EAA+BT,GACjCA,EAAMC,UAAUS,oBCVpB,MAAMC,UAAuBC,EAAAA,UAAgBC,WAAAA,GAAA,SAAAC,WAAA,KAKhDlE,cAAiBmE,IACbC,KAAK3C,MAAM4C,eAAeF,GAC1BC,KAAK3C,MAAM6C,SAASH,EAASC,KAAK3C,MAAM3B,SAAS,CACpD,CAPDyE,iBAAAA,GACIH,KAAK3C,MAAM6C,SAASF,KAAK3C,MAAM1B,YAAaqE,KAAK3C,MAAM3B,SAC3D,CAOA0E,MAAAA,GACI,OAAO1D,EAAAA,EAAAA,MAAA2D,EAAAA,SAAA,CAAA1D,SAAA,CACFqD,KAAK3C,MAAMmC,YAAa5C,EAAAA,EAAAA,KAAC0D,EAAAA,EAAS,IAAK,MACxC1D,EAAAA,EAAAA,KAACQ,EAAK,CAACG,WAAYyC,KAAK3C,MAAME,WACvB7B,SAAUsE,KAAK3C,MAAM3B,SACrB4B,eAAgB0C,KAAK3C,MAAMC,eAC3B3B,YAAaqE,KAAK3C,MAAM1B,YACxBC,cAAeoE,KAAKpE,cACpB+C,iBAAkBqB,KAAK3C,MAAMsB,iBAC7BG,OAAQkB,KAAK3C,MAAMyB,OACnBD,SAAUmB,KAAK3C,MAAMwB,SACrBhD,YAAamE,KAAK3C,MAAMxB,gBAGvC,EAeJ,SAAe0E,EAAAA,EAAAA,KAZQvB,IACZ,CACHzB,WAAYwB,EAAiBC,GAC7BtD,SAAUyD,EAAoBH,GAC9B1B,eAAgB+B,EAAsBL,GACtCrD,YAAa2D,EAAuBN,GACpCQ,WAAYD,EAAsBP,GAClCL,iBAAkBc,EAA4BT,GAC9CnD,YAAamD,EAAMC,UAAUpD,eAIG,CACpCoE,eAAc,KACdC,SAAQ,KACRpB,OAAM,KACND,SACJ,MALA,CAKGc,E","sources":["webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/Paginator.jsx","components/Users/Users.jsx","redux/users_selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Users_selectedPage__fvNQS\",\"buttonPlaceFollow\":\"Users_buttonPlaceFollow__EjsgJ\",\"buttonPlaceUnfollow\":\"Users_buttonPlaceUnfollow__Vjvea\",\"imageCircling\":\"Users_imageCircling__20Pzr\"};","import React, {useState} from \"react\";\r\nimport {Button} from \"antd\";\r\nimport s from \"./Users.module.css\";\r\n\r\n\r\nexport const Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let pages = [];\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        {portionNumber > 1 && <Button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>Prev</Button>}\r\n        {pages.filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n            .map(p => {\r\n            return <span className={currentPage === p && s.selectedPage}\r\n                         onClick={() => {\r\n                             onPageChanged(p)\r\n                         }}>{p}&nbsp;</span>\r\n        })}\r\n        {portionCount > portionNumber && <Button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</Button>}\r\n    </div>\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button, Avatar} from \"antd\"\r\nimport {UserOutlined} from \"@ant-design/icons\"\r\nimport {Paginator} from \"./Paginator\";\r\n\r\nexport let Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={props.totalUserCount} pageSize={props.pageSize} currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged} />\r\n            <div><br/>Targets :</div>\r\n            <div>\r\n                {\r\n                    props.clientUser.map(u =>\r\n                        <div>\r\n                            <br/>\r\n                            <div style={{fontFamily: \"fantasy\", fontSize: \"25px\"}}>\r\n                                {u.id} | {u.name} - {u.status != null ? \"online\" : \"offline\"}\r\n                                <br/>\r\n                                {u.photos.small != null\r\n                                    ? <NavLink to={\"/MainBody/\" + u.id}>\r\n                                        <img className={s.imageCircling} src={u.photos.small}/>\r\n                                    </NavLink>\r\n\r\n                                    : <NavLink to={\"/MainBody/\" + u.id}>\r\n                                        <Avatar size={100} icon={<UserOutlined/>}/>\r\n                                    </NavLink>}\r\n\r\n                            </div>\r\n                            <div>\r\n                                {u.followed\r\n                                    ? <Button className={s.buttonPlaceUnfollow} type={\"default\"}\r\n                                              disabled={props.followInProgress.some(id => id === u.id)} onClick={() => {\r\n                                        props.unfollow(u.id)\r\n                                    }}>Unfollow</Button>\r\n\r\n                                    : <Button className={s.buttonPlaceFollow} type={\"primary\"}\r\n                                              disabled={props.followInProgress.some(id => id === u.id)} onClick={() => {\r\n                                        props.follow(u.id)\r\n                                    }}>Follow</Button>\r\n                                }\r\n                            </div>\r\n                        </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSuper = createSelector([getUsersSelector], (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUserCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {Users} from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage, unfollow\r\n} from \"../../redux/users_reducer\";\r\nimport React from \"react\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPageSelector, getFollowInProgressSelector, getIsFetchingSelector,\r\n    getPageSizeSelector,\r\n    getUsersCountSelector,\r\n    getUsersSelector\r\n} from \"../../redux/users_selectors\";\r\n\r\n\r\nexport class UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNum) => {\r\n        this.props.setCurrentPage(pageNum)\r\n        this.props.getUsers(pageNum, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users clientUser={this.props.clientUser}\r\n                   pageSize={this.props.pageSize}\r\n                   totalUserCount={this.props.totalUserCount}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   followInProgress={this.props.followInProgress}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   portionSize={this.props.portionSize}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        clientUser: getUsersSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUserCount: getUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followInProgress: getFollowInProgressSelector(state),\r\n        portionSize: state.usersPage.portionSize\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    getUsers,\r\n    follow,\r\n    unfollow\r\n})(UsersContainer);\r\n\r\n"],"names":["Paginator","_ref","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","portionNumber","setPortionNumber","useState","pages","pagesCount","Math","ceil","portionCount","leftPortionNumber","rightPortionNumber","i","push","_jsxs","children","_jsx","Button","onClick","filter","p","map","className","s","Users","props","totalUserCount","clientUser","u","style","fontFamily","fontSize","id","name","status","photos","small","NavLink","to","src","Avatar","size","icon","UserOutlined","followed","type","disabled","followInProgress","some","unfollow","follow","getUsersSelector","state","usersPage","users","getPageSizeSelector","createSelector","getUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","isFetching","getFollowInProgressSelector","followingInProgress","UsersContainer","React","constructor","arguments","pageNum","this","setCurrentPage","getUsers","componentDidMount","render","_Fragment","Preloader","connect"],"sourceRoot":""}