{"version":3,"file":"static/js/982.4c4daa2e.chunk.js","mappings":"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","sources":["components/Common/Textarea/Textarea.js","webpack://my-app/./src/components/Mainbody/Posts/Profile/MainProfile/MainProfile.module.css?8555","components/Mainbody/Posts/Profile/MainProfile/StatusProfile.jsx","components/Mainbody/Posts/Profile/MainProfile/MainProfileRedux.jsx","components/Mainbody/Posts/Profile/MainProfile/MainProfile.jsx","components/Mainbody/Posts/Profile/MainProfile/MainProfileContainer.jsx","webpack://my-app/./src/components/Mainbody/Posts/Profile/MyPosts/MyPosts.module.css?bc83","components/Mainbody/Posts/Profile/MyPosts/MyPosts.jsx","components/Mainbody/Posts/Profile/MyPosts/MyPostsContainer.jsx","components/Mainbody/Mainbody.jsx","components/Mainbody/MainBodyContainer.jsx","components/Common/withRouter/withRouter.jsx","utils/validators/validator.js","webpack://my-app/./src/components/Common/Textarea/FormSettings.module.css?57dd"],"sourcesContent":["import styles from \"./FormSettings.module.css\"\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"font\":\"MainProfile_font__eSp8Z\"};","import React from 'react'\r\n\r\nconst StatusProfile = (props) => {\r\n\r\n    const [localState, setLocalState] = React.useState({\r\n        editMode: false,\r\n        status: props.status,\r\n    });\r\n\r\n    const activateEditMode = () => {\r\n        setLocalState({ ...localState, editMode: true });\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setLocalState({ ...localState, editMode: false });\r\n        props.updateStatus(localState.status);\r\n    };\r\n\r\n    const onStatusChange = (event) => {\r\n        setLocalState({ ...localState, status: event.currentTarget.value });\r\n        props.updateStatus(localState.status);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!localState.editMode && (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n                </div>\r\n            )}\r\n            {localState.editMode && (\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={localState.status}\r\n                        onChange={onStatusChange}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusProfile;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../../utils/validators/validator\";\r\nimport {Textarea} from \"../../../../Common/Textarea/Textarea\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nexport let ProfileRedux = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field component={Textarea} name={\"addPost\"} placeholder={\"What's new?\"}\r\n                    validate={[requiredField, maxLength]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Отправить</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport let MainProfileRedux = reduxForm({\r\n    form: \"ProfileRedux\"\r\n})(ProfileRedux)\r\n","import s from \"./MainProfile.module.css\"\r\nimport React from 'react';\r\nimport {Preloader} from \"../../../../Common/Preloader/Preloader\";\r\nimport StatusProfile from \"./StatusProfile\";\r\nimport {MainProfileRedux} from \"./MainProfileRedux\";\r\n\r\nfunction MainProfile(props) {\r\n\r\n    let addPosts = (value) => {\r\n        props.addProfilePost(value.addPost)\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.font}>\r\n            <div>\r\n                <img src={props.profile.photos.large}/> <br/>\r\n                <StatusProfile status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                <a>{props.profile.fullName}</a>\r\n                <div>{props.profile.aboutMe}</div>\r\n            </div>\r\n            <br/><br/>\r\n\r\n            <MainProfileRedux onSubmit={addPosts}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainProfile;","import {\r\n    addProfilePost,\r\n    updateStatus\r\n} from \"../../../../../redux/profile_reducer\";\r\nimport MainProfile from \"./MainProfile\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.post,\r\n        newPostText: state.profilePage.postText,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addProfilePost: (postText) => {\r\n            dispatch(addProfilePost(postText))\r\n        },\r\n        updateStatus: (status) => {\r\n            dispatch(updateStatus(status))\r\n        }\r\n    }\r\n}\r\n\r\nconst MainProfileContainer = connect(mapStateToProps,\r\n    mapDispatchToProps)(MainProfile);\r\n\r\n\r\nexport default MainProfileContainer;","// extracted by mini-css-extract-plugin\nexport default {\"likes\":\"MyPosts_likes__3DdlI\"};","import React from \"react\";\r\nimport m from \"./MyPosts.module.css\"\r\n\r\nlet MyPosts = React.memo(props => {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className={\"Post\"}>\r\n                        <div>\r\n                            <a>{props.post.map(p => <div>\r\n                                <div>{p.message}</div>\r\n                                <div className={m.likes}>{p.number} likes</div>\r\n                            </div>)}</a>\r\n                        </div>\r\n\r\n                        <div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nexport default MyPosts;\r\n","import {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.post\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import s from \"./MainBody.module.css\"\r\nimport MainProfileContainer from \"./Posts/Profile/MainProfile/MainProfileContainer\";\r\nimport MyPostsContainer from \"./Posts/Profile/MyPosts/MyPostsContainer\";\r\n\r\nfunction MainBody(props) {\r\n    return (\r\n        <div className={s.desc}>\r\n            <div>\r\n                <MainProfileContainer profile={props.profile}/>\r\n            </div>\r\n\r\n            <div>\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainBody;\r\n","import React from 'react';\r\nimport MainBody from \"./Mainbody\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, setUserProfile} from \"../../redux/profile_reducer\";\r\nimport {withRouter} from \"../Common/withRouter/withRouter\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\n\r\nclass BodyContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) userId = this.props.userId;\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <MainBody {...this.props} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        userId: state.authUser.userId,\r\n        isAuth: state.authUser.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus}),\r\n    withRouter)(BodyContainer);\r\n\r\n","import {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\n// wrapper to use React router's v6 hooks in class component(to use HOC pattern, like in router v5)\r\nexport function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}","\r\nexport const requiredField = (value) => {\r\n    if (value) return undefined\r\n    else return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormSettings_formControl__3TVsw\",\"error\":\"FormSettings_error__axShK\",\"formSummaryError\":\"FormSettings_formSummaryError__yWa2S\"};"],"names":["FormControl","_ref","input","meta","child","props","hasError","touched","error","_jsxs","className","styles","formControl","children","_jsx","Textarea","restProps","Input","localState","setLocalState","React","editMode","status","onDoubleClick","activateEditMode","autoFocus","onBlur","deactivateEditMode","updateStatus","value","onChange","event","currentTarget","maxLength","maxLengthCreator","MainProfileRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","requiredField","profile","s","src","photos","large","StatusProfile","fullName","aboutMe","addProfilePost","addPost","Preloader","connect","state","post","profilePage","newPostText","postText","dispatch","MainProfile","map","p","message","m","number","MyPosts","desc","MainProfileContainer","MyPostsContainer","BodyContainer","componentDidMount","userId","this","router","params","getProfile","getStatus","render","MainBody","compose","authUser","isAuth","setUserProfile","Component","location","useLocation","navigate","useNavigate","useParams","length"],"sourceRoot":""}